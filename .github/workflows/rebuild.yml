name: Rebuild and Deploy

on:
  workflow_dispatch: # Manual run
  repository_dispatch: # Triggered by child repo
    types: [child-updated]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout parent repo with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: pip install pyyaml mkdocs mkdocs-material

      - name: Ensure submodule tracks remote main
        run: |
          git config -f .gitmodules submodule.child-repo.branch main
          git submodule sync --recursive
          git submodule update --init --recursive

      - name: Update submodule to latest commit on remote
        run: |
          git submodule update --remote --force
          git add child-repo
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git commit -m "ðŸ”„ Update child-repo submodule to latest commit" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF##*/} || echo "No changes to push"

      - name: Sync child docs and update mkdocs.yml
        run: python scripts/sync_child_docs.py

      - name: Commit synced docs and mkdocs.yml
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs mkdocs.yml
          git commit -m "ðŸ”„ Sync docs from child-repo" || echo "No changes to commit"
          git push origin HEAD:${{ github.ref }} || echo "No changes to push"

      - name: Deploy to GitHub Pages with MkDocs
        run: mkdocs gh-deploy --force
